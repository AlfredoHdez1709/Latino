Terminals unused in grammar

   SEMICOLON
   MODULO


State 7 conflicts: 1 shift/reduce
State 26 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statement
    2        | statement program
    3        | statement error program

    4 $@1: /* empty */

    5 statement: IDENTIFIER $@1 ASSIGN expression
    6          | expression

    7 expression: LBRACE expression RBRACE
    8           | SUB expression
    9           | expression ADD expression
   10           | expression SUB expression
   11           | expression MULT expression
   12           | expression DIV expression
   13           | VALUE
   14           | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256) 3
IDENTIFIER (258) 5 14
VALUE (259) 13
LBRACE (260) 7
RBRACE (261) 7
ASSIGN (262) 5
SEMICOLON (263)
SUB (264) 8 10
ADD (265) 9
MODULO (266)
DIV (267) 12
MULT (268) 11
NEG (269)


Nonterminals, with rules where they appear

$accept (15)
    on left: 0
program (16)
    on left: 1 2 3, on right: 0 2 3
statement (17)
    on left: 5 6, on right: 1 2 3
$@1 (18)
    on left: 4, on right: 5
expression (19)
    on left: 7 8 9 10 11 12 13 14, on right: 5 6 7 8 9 10 11 12


state 0

    0 $accept: . program $end

    IDENTIFIER  shift, and go to state 1
    VALUE       shift, and go to state 2
    LBRACE      shift, and go to state 3
    SUB         shift, and go to state 4

    program     go to state 5
    statement   go to state 6
    expression  go to state 7


state 1

    5 statement: IDENTIFIER . $@1 ASSIGN expression
   14 expression: IDENTIFIER .  [$end, error, IDENTIFIER, VALUE, LBRACE, SUB, ADD, DIV, MULT]

    ASSIGN    reduce using rule 4 ($@1)
    $default  reduce using rule 14 (expression)

    $@1  go to state 8


state 2

   13 expression: VALUE .

    $default  reduce using rule 13 (expression)


state 3

    7 expression: LBRACE . expression RBRACE

    IDENTIFIER  shift, and go to state 9
    VALUE       shift, and go to state 2
    LBRACE      shift, and go to state 3
    SUB         shift, and go to state 4

    expression  go to state 10


state 4

    8 expression: SUB . expression

    IDENTIFIER  shift, and go to state 9
    VALUE       shift, and go to state 2
    LBRACE      shift, and go to state 3
    SUB         shift, and go to state 4

    expression  go to state 11


state 5

    0 $accept: program . $end

    $end  shift, and go to state 12


state 6

    1 program: statement .  [$end]
    2        | statement . program
    3        | statement . error program

    error       shift, and go to state 13
    IDENTIFIER  shift, and go to state 1
    VALUE       shift, and go to state 2
    LBRACE      shift, and go to state 3
    SUB         shift, and go to state 4

    $end  reduce using rule 1 (program)

    program     go to state 14
    statement   go to state 6
    expression  go to state 7


state 7

    6 statement: expression .  [$end, error, IDENTIFIER, VALUE, LBRACE, SUB]
    9 expression: expression . ADD expression
   10           | expression . SUB expression
   11           | expression . MULT expression
   12           | expression . DIV expression

    SUB   shift, and go to state 15
    ADD   shift, and go to state 16
    DIV   shift, and go to state 17
    MULT  shift, and go to state 18

    SUB       [reduce using rule 6 (statement)]
    $default  reduce using rule 6 (statement)


state 8

    5 statement: IDENTIFIER $@1 . ASSIGN expression

    ASSIGN  shift, and go to state 19


state 9

   14 expression: IDENTIFIER .

    $default  reduce using rule 14 (expression)


state 10

    7 expression: LBRACE expression . RBRACE
    9           | expression . ADD expression
   10           | expression . SUB expression
   11           | expression . MULT expression
   12           | expression . DIV expression

    RBRACE  shift, and go to state 20
    SUB     shift, and go to state 15
    ADD     shift, and go to state 16
    DIV     shift, and go to state 17
    MULT    shift, and go to state 18


state 11

    8 expression: SUB expression .  [$end, error, IDENTIFIER, VALUE, LBRACE, RBRACE, SUB, ADD, DIV, MULT]
    9           | expression . ADD expression
   10           | expression . SUB expression
   11           | expression . MULT expression
   12           | expression . DIV expression

    $default  reduce using rule 8 (expression)


state 12

    0 $accept: program $end .

    $default  accept


state 13

    3 program: statement error . program

    IDENTIFIER  shift, and go to state 1
    VALUE       shift, and go to state 2
    LBRACE      shift, and go to state 3
    SUB         shift, and go to state 4

    program     go to state 21
    statement   go to state 6
    expression  go to state 7


state 14

    2 program: statement program .

    $default  reduce using rule 2 (program)


state 15

   10 expression: expression SUB . expression

    IDENTIFIER  shift, and go to state 9
    VALUE       shift, and go to state 2
    LBRACE      shift, and go to state 3
    SUB         shift, and go to state 4

    expression  go to state 22


state 16

    9 expression: expression ADD . expression

    IDENTIFIER  shift, and go to state 9
    VALUE       shift, and go to state 2
    LBRACE      shift, and go to state 3
    SUB         shift, and go to state 4

    expression  go to state 23


state 17

   12 expression: expression DIV . expression

    IDENTIFIER  shift, and go to state 9
    VALUE       shift, and go to state 2
    LBRACE      shift, and go to state 3
    SUB         shift, and go to state 4

    expression  go to state 24


state 18

   11 expression: expression MULT . expression

    IDENTIFIER  shift, and go to state 9
    VALUE       shift, and go to state 2
    LBRACE      shift, and go to state 3
    SUB         shift, and go to state 4

    expression  go to state 25


state 19

    5 statement: IDENTIFIER $@1 ASSIGN . expression

    IDENTIFIER  shift, and go to state 9
    VALUE       shift, and go to state 2
    LBRACE      shift, and go to state 3
    SUB         shift, and go to state 4

    expression  go to state 26


state 20

    7 expression: LBRACE expression RBRACE .

    $default  reduce using rule 7 (expression)


state 21

    3 program: statement error program .

    $default  reduce using rule 3 (program)


state 22

    9 expression: expression . ADD expression
   10           | expression . SUB expression
   10           | expression SUB expression .  [$end, error, IDENTIFIER, VALUE, LBRACE, RBRACE, SUB, ADD]
   11           | expression . MULT expression
   12           | expression . DIV expression

    DIV   shift, and go to state 17
    MULT  shift, and go to state 18

    $default  reduce using rule 10 (expression)


state 23

    9 expression: expression . ADD expression
    9           | expression ADD expression .  [$end, error, IDENTIFIER, VALUE, LBRACE, RBRACE, SUB, ADD]
   10           | expression . SUB expression
   11           | expression . MULT expression
   12           | expression . DIV expression

    DIV   shift, and go to state 17
    MULT  shift, and go to state 18

    $default  reduce using rule 9 (expression)


state 24

    9 expression: expression . ADD expression
   10           | expression . SUB expression
   11           | expression . MULT expression
   12           | expression . DIV expression
   12           | expression DIV expression .  [$end, error, IDENTIFIER, VALUE, LBRACE, RBRACE, SUB, ADD, DIV, MULT]

    $default  reduce using rule 12 (expression)


state 25

    9 expression: expression . ADD expression
   10           | expression . SUB expression
   11           | expression . MULT expression
   11           | expression MULT expression .  [$end, error, IDENTIFIER, VALUE, LBRACE, RBRACE, SUB, ADD, DIV, MULT]
   12           | expression . DIV expression

    $default  reduce using rule 11 (expression)


state 26

    5 statement: IDENTIFIER $@1 ASSIGN expression .  [$end, error, IDENTIFIER, VALUE, LBRACE, SUB]
    9 expression: expression . ADD expression
   10           | expression . SUB expression
   11           | expression . MULT expression
   12           | expression . DIV expression

    SUB   shift, and go to state 15
    ADD   shift, and go to state 16
    DIV   shift, and go to state 17
    MULT  shift, and go to state 18

    SUB       [reduce using rule 5 (statement)]
    $default  reduce using rule 5 (statement)
